import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, mark):
    # Check rows, columns, and diagonals
    for row in board:
        if all(s == mark for s in row):
            return True
    for col in range(3):
        if all(row[col] == mark for row in board):
            return True
    if all(board[i][i] == mark for i in range(3)) or all(board[i][2-i] == mark for i in range(3)):
        return True
    return False

def get_empty_positions(board):
    empty_positions = []
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                empty_positions.append((i, j))
    return empty_positions

def player_move(board):
    while True:
        move = input("Enter your move (row and column): ").split()
        if len(move) != 2 or not all(m.isdigit() for m in move):
            print("Invalid input. Please enter row and column numbers.")
            continue
        row, col = map(int, move)
        if row < 1 or row > 3 or col < 1 or col > 3 or board[row-1][col-1] != ' ':
            print("Invalid move. Please try again.")
            continue
        return row-1, col-1

def computer_move(board):
    empty_positions = get_empty_positions(board)
    return random.choice(empty_positions)

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    print_board(board)
    
    for turn in range(9):
        if turn % 2 == 0:
            print("Your turn:")
            row, col = player_move(board)
            board[row][col] = 'X'
        else:
            print("Computer's turn:")
            row, col = computer_move(board)
            board[row][col] = 'O'
        
        print_board(board)
        
        if check_winner(board, 'X'):
            print("Congratulations! You win!")
            return
        elif check_winner(board, 'O'):
            print("Computer wins! Better luck next time.")
            return
    
    print("It's a tie!")

if __name__ == "__main__":
    tic_tac_toe()
import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, mark):
    # Check rows, columns, and diagonals
    for row in board:
        if all(s == mark for s in row):
            return True
    for col in range(3):
        if all(row[col] == mark for row in board):
            return True
    if all(board[i][i] == mark for i in range(3)) or all(board[i][2-i] == mark for i in range(3)):
        return True
    return False

def get_empty_positions(board):
    empty_positions = []
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                empty_positions.append((i, j))
    return empty_positions

def player_move(board):
    while True:
        move = input("Enter your move (row and column): ").split()
        if len(move) != 2 or not all(m.isdigit() for m in move):
            print("Invalid input. Please enter row and column numbers.")
            continue
        row, col = map(int, move)
        if row < 1 or row > 3 or col < 1 or col > 3 or board[row-1][col-1] != ' ':
            print("Invalid move. Please try again.")
            continue
        return row-1, col-1

def computer_move(board):
    empty_positions = get_empty_positions(board)
    return random.choice(empty_positions)

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    print_board(board)
    
    for turn in range(9):
        if turn % 2 == 0:
            print("Your turn:")
            row, col = player_move(board)
            board[row][col] = 'X'
        else:
            print("Computer's turn:")
            row, col = computer_move(board)
            board[row][col] = 'O'
        
        print_board(board)
        
        if check_winner(board, 'X'):
            print("Congratulations! You win!")
            return
        elif check_winner(board, 'O'):
            print("Computer wins! Better luck next time.")
            return
    
    print("It's a tie!")

if __name__ == "__main__":
    tic_tac_toe()
